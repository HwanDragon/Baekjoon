#include <vector>
#include <stack>
#include <iostream>
#include <algorithm>

using namespace std;

int result = 0;
int n;
int xPos[15] = { 0, };
int yPos[15] = { 0, };
void printBoard();

bool promising(int y, int x)
{
	for (int i = 1; i < y; i++)
	{
		if (xPos[i] == x)	// 세로줄 확인
			return false;

		if (yPos[i] == y)
			return false;

		// 대각선 확인
		if (abs(xPos[i] - x) == abs(yPos[i] - y))
			return false;
	}
	return true;
}

void search(int depth)
{
	for (int x = 1; x <= n; x++)
	{
		if (promising(depth, x))
		{
			if (depth == n)
			{
				result++;

				//yPos[depth] = depth;
				//xPos[depth] = x;
				//printBoard();
				//yPos[depth] = 0;
				//xPos[depth] = 0;
			}
			else
			{
				yPos[depth] = depth;
				xPos[depth] = x;
				search(depth + 1);
				yPos[depth] = 0;
				xPos[depth] = 0;
			}
		}
		else
		{
			continue;
		}
	}
}

void printBoard()
{
	for (int i = 1; i <= n; i++)
	{
		cout << xPos[i] << ", " << yPos[i] << endl;
	}
	cout << "--------------------\n";
}

int main()
{
	cin >> n;
	search(1);
	cout << result;
	return 0;
}