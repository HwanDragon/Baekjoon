#include <iostream>
#include <algorithm>
using namespace std;

// 무게가 1짜리인 무게추가 없을경우 정답은 1
// 무게추들에서 가장 가벼운 무게추부터 꺼내 더한다고 생각해보자
// 여태까지 꺼낸 무게추의 총 개수를 n, 총 무게를 sum 이라고 할 때
// 만약 n + 1 번째 꺼낸 추의 무게가 sum + 3 이라고 하면
// 젤 수 없는 무게는 sum + 1, sum + 2 가 되는데, 이중 작은 값을 반환하였으므로 sum + 1을 반환한다
// 즉, n + 1번째 꺼낸 무게추는 sum + 1보다 크면 잴수 없는 무게가 생기게 되는 것이다

// 위의 내용을 기반으로 n = 1일 때부터 대입하여 맞는지 확인하여 보자
// n = 1 일때 무게(weight)가 w = 1인 무게추를 꺼내면 sum = w (sum == 1)
// n = 2 일때 무게(weight)가 w = 2인 무게추를 꺼내면 sum = w + sum (sum == 3)
// n = 3 일때 무게(weight)가 w = 4인 무게추를 꺼내고 sum = w + sum (sum == 7)
// n = 4 일때 무게(weight)가 w = 12인 무게추를 꺼내면 잴 수 없는 무게가 8, 9, 10, 11 이 생기게 된다
// 

int main() 
{
	int n = 0, len = 1;
	int arr[1001] = { 0, };
	int sum = 0;

	// 저울 개수를 사용자로부터 입력받음
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> arr[i];

	// 무게추로 잴 수 없는 최소값을 구하는 것이므로 1부터 무게를 올려가며 젤 수 없는 최소값을 구하면됨
	// 먼저 저울추의 작은 무게추부터 오름차순으로 정렬하여 작은무게부터 하나씩 잼
	sort(arr, arr + n); //오름차순 정렬

	// 작은 무게추부터 하나씩 꺼내 확인
	for (int i = 0; i <= n; i++) 
	{

		// 현재 올리려는 저울추의 무게가 현재까지 모두 더한 총 합 + 1 보다 커지면 측정할 수 없음
		if (arr[i] > sum + 1) {
			break;
		}
		sum += arr[i];

	}

	cout << sum + 1 << endl;
	return 0;
}