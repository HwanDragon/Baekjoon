#include <iostream>
/*
n개중 m개를 순서에 상관없이 뽑는 조합 문제이다
// 백트래킹 문제로 재귀함수를 이용하여 문제를 해결한다.
// 문제 해결방법은 다음과 같다
// n이 최대 8이고, n개의 수 (1~8) 을 사용중인지 저장 할 배열이 필요하다
//
// 배열인덱스 : [0, 1, 2, 3, 4, 5, 6, 7, 8]
// 배열저장값 : [0, 0, 1, 0, 2, 3, 0, 0, 0]
//
// 배열저장값은 현재 탐색중인 인덱스에 depth를 추가한것이다.
// 즉, depth가 1이라는 말은 가장 처음에 탐색한 것이며 1부터 순서대로 m까지 출력되어야 한다.
// 위의 예제에서는 2 4 5 가 출력되는 것이다.
*/
using namespace std;

int n, m;
int nums[9] = { 0 , };

/*
search 함수에는 어디까지 탐색했는지 depth와 현재 어느지점부터 탐색해야하는지를 나타내는 cur변수 입력받음
*/
void search(int depth, int cur)
{
	if (depth > m)
	{
		// 배열을 순회하며 nums에 있는 순서대로 인덱스값 출력
		for (int i = 1; i <= n; i++)
		{
			for (int j = 1; j <= n; j++)
			{
				// nums에 들어있는 순서(i)와 인덱스값(j)을 비교해 같으면 출력
				if (nums[j] == i) cout << j << " ";
			}
		}
		cout << "\n";
		return;
	}

	// cur부터 탐색함
	for (int i = cur; i <= n; i++)
	{
		if (nums[i] != 0) continue;
		nums[i] = i;
		search(depth + 1, i);
		nums[i] = 0;
	}
}

int main()
{
	cin >> n >> m;
	search(1, 1);
	return 0;
}