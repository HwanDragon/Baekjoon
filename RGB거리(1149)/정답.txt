#include <iostream>

#define CNT 1001

using namespace std;

int n;
int arr[CNT][3] = { 0, };
int dp[CNT][3] = { 0, };

int main()
{
	// 입출력 속도 향상
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	// 사용자 입력 받음
	cin >> n;
	for (int i = 1; i <= n; i++)
		for (int j = 0; j < 3; j++)
			cin >> arr[i][j];
	
	/*
	i번째 집이 빨강일 경우 i - 1번째 집은 (초록) 또는 (파랑) 색만 올 수 있음
	i번째 집이 초록일 경우 i - 1번째 집은 (빨강) 또는 (파랑) 색만 올 수 있음
	i번째 집이 파랑일 경우 i - 1번째 집은 (빨강) 또는 (초록) 색만 올 수 있음
	*/
	for (int i = 1; i <= n; i++)
	{
		dp[i][0] = min(dp[i - 1][1], dp[i - 1][2]) + arr[i][0];	// i번째집이 빨강일 경우 i-1번째는 초록 또는 파랑만 올 수 있고 그 중 더 작은비용 선택
		dp[i][1] = min(dp[i - 1][0], dp[i - 1][2]) + arr[i][1];
		dp[i][2] = min(dp[i - 1][0], dp[i - 1][1]) + arr[i][2];
	}

	// 최소값 찾음
	int minValue = 1000000000;
	for (int i = 0; i < 3; i++)
		minValue = min(minValue, dp[n][i]);

	// 결과 출력
	cout << minValue;

	return 0;
}