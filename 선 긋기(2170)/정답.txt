#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int n;
vector<pair<int, int>> lines;	// 선분의 시작점과 끝점 저장

// 첫번째 항목을 기준으로 오름차순 정렬
bool cmp(pair<int, int> &f, pair<int, int> &s)
{
	return f.first < s.first;
}

int main()
{
	// 입출력 속도 향상
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int result = 0;
	int first, second;
	// 사용자 입력 받음
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> first >> second;
		if (first > second)
			lines.push_back({ second, first });
		else
			lines.push_back({ first , second });
	}

	// 각 선분을 시작점을 기준으로 오름차순 정렬함
	sort(lines.begin(), lines.end(), cmp);

	int start = lines[0].first;	// 초기값 설정(처음 선분)
	int end = lines[0].second;	// 초기값 설정(처음 선분)
	result += (end - start);	//초기값 설정(처음 선분)

	for (int i = 1; i < n; i++)
	{
		pair<int, int> p = lines.at(i);
		if (end >= p.second) continue;	// 꺼낸 선분이 기존 선분 안에 완전히 포함되는 경우

		if (end <= p.first)	// 새로 꺼낸 선분과 기존에 계산중이던 값이 겹치지 않는 경우
		{
			start = p.first;	// 값을 새롭게 갱신
			end = p.second;		// 값을 새롭게 갱신
			result += (end - start);	// 결과값 추가
		}
		else if (end > p.first)	// 선이 겹치는 경우 (겹치는 구간은 제외하고 결과값에 더해줌)
		{
			result += (p.second - end);	// 겹치는 구간 제외
			end = p.second;
		}
	}

	cout << result;
	return 0;
}