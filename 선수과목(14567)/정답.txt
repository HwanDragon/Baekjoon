#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int n, m;
vector<int> edges[1001];	// 간선정보 저장
int degree[1001] = { 0, };	// 진입 차수 계산
int dists[1001] = { 0, };	// 여태까지 몇번이나 진입해서 들어왔는지 저장

int main()
{
	// 사용자 입력 받음
	cin >> n >> m;
	int first, second;
	for (int i = 0; i < m; i++)
	{
		cin >> first >> second;
		edges[first].push_back(second);
		degree[second]++;	// 진입차수 계산
	}

	// 1번 노드부터 진입차수가 0인 노드들 큐에 추가
	queue<int> q;
	for (int i = 1; i <= n; i++)
	{
		if (degree[i] == 0)
		{
			q.push(i);
			dists[i] = 1;	// 큐에 들어간 항목들은 1학기에 수강 가능
		}
	}

	// 위상정렬 시작
	while (q.empty() == false)
	{
		int current = q.front();
		q.pop();

		for (int i = 0; i < edges[current].size(); i++)
		{
			int nextNode = edges[current].at(i);
			degree[nextNode]--;		// 진입차수 감소
			if (degree[nextNode] == 0)	// 진입차수가 0이면 큐에 추가
			{
				q.push(nextNode);
				if (dists[nextNode] < dists[current] + 1)	// 현재 진입차수보다 새로 계산한 진입차수가 더 크다면 갱신
				{
					dists[nextNode] = dists[current] + 1;
				}
			}
		}
	}

	for (int i = 1; i <= n; i++)
	{
		cout << dists[i] << " ";
	}

	return 0;
}