#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int n, k;
int dp[102][100002] = { 0, };
int weight[100] = { 0, };
int values[100] = { 0, };

int search(int index, int w)
{
	if (w < 0)
		return 0;

	if (index < 0)
		return 0;

	if (dp[index][w] != 0)
		return dp[index][w];

	if (w < weight[index])
	{
		return dp[index][w] = search(index - 1, w);
	}
	else 
	{
		int	n1 = search(index - 1, w - weight[index]) + values[index];
		int n2 = search(index - 1, w);
		return dp[index][w] = max(n1, n2);
	}

}

int main()
{
	/*
		점화식 : 
		(n번째 물건을 챙길경우) ns(n, w) = ns(n - 1, w - w[n]) + v[n];
		(n번째 물건을 안챙긴경우) ns(n, w) = ms(n - 1, w) 
	*/

	cin >> n >>  k;
	for (int i = 0; i < n; i++)
	{
		cin >> weight[i] >> values[i];
	}

	cout << search(n, k);
	return 0;
}