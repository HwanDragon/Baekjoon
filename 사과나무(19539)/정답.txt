#include <iostream>

/*
물뿌리개 하나가 1, 다른 하나가 2만큼 성장시키고, 항상 두개를 같이 사용해야 하므로
모든 나무들의 길이는 항상 3의 배수가 되어야만 한다.

3의 배수라고 하더라도, 1과 2만 사용할 수 있으므로
필요한 수의 개수가 2보다 1이 더 많을 경우에는 원하는 배치로 만드는게 불가능하다.
2의 개수가 더 많을 경우에는 1만큼 자라는 물뿌리개를 두번 뿌리면 되므로 만드는게 가능하다.(3의 배수일 경우만)
*/

using namespace std;

int n;	// 사과나무 개수
int nums[100001];	// 사과나무의 길이

int main()
{
	int sum = 0;	// 전체 합

	// 사용자 입력 받음
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> nums[i];
		sum += nums[i];	// 전체 합 계산
	}

	// 전체합이 3으로 나누어 떨어지지 않는다면 원하는 사과나무 배치를 얻는게 불가능함
	if (sum % 3 != 0)
	{
		cout << "NO";
		return 0;
	}
		
	int oneCnt = 0;	// 1의 개수 카운팅
	int twoCnt = 0;	// 2의 개수 카운팅
	for (int i = 0; i < n; i++)
	{
		if (nums[i] % 2 == 0)
		{
			twoCnt += (nums[i] / 2);
		}
		else
		{
			twoCnt += (nums[i] / 2);
			oneCnt++;
		}
	}

	// 필요한 1의 개수가 2의 개수보다 많을때는 원하는 사과나무를 배치하는게 불가능
	if (oneCnt > twoCnt)
	{
		cout << "NO";
		return 0;
	}

	// 2가 더 많을경우는 1씩 두번주어 원하는 배치를 만드는게 가능함
	// 3의 배수이고 2의 개수가 1보다 더 많기 때문
	cout << "YES";
	return 0;
}