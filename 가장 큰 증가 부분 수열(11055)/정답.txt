#include <iostream>

#define CNT 1001

using namespace std;

int n;
int arr[CNT] = { 0, };	// 수열 저장
int dp[CNT] = { 0, };	// 증가하는 부분수열의 합 저장

int main()
{
	// 입출력 속도 향상
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	// 사용자 입력 받음
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> arr[i];
		dp[i] = arr[i];	// dp 배열 초기화
	}

	/*
	i -> 0...n-1 까지 탐색하고, j -> 0...i-1 까지 이중 반복문을 이용하여 수열을 순회함
	증가하는 부분수열이여야 하므로 arr[i] > arr[j] 이어야 하고, 
	부분수열의 최대 합을 계산하여야 하므로
	dp 배열을 arr 수열 값으로 초기화 하고,
	i 번째까지의 최대합 -> dp[i] 보다 새로운 부분수열의 합을 찾았을 경우 -> dp[j] + arr[i]
	값을 갱신함
	*/
	int maxValue = dp[0];	// 최대값 저장
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < i; j++)
		{
			if (arr[i] > arr[j] && dp[i] < dp[j] + arr[i])	// 더 큰 부분수열의 합을 찾았을 경우
			{
				dp[i] = dp[j] + arr[i];
				maxValue = max(maxValue, dp[i]);	// 최대값 저장
			}
		}
	}

	// 결과 출력
	cout << maxValue;

	return 0;
}