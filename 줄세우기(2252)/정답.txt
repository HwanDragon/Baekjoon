#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int n, m;
vector<pair<int, int>> edges;

int degree[32001] = { 0, };

int main()
{
	vector<int> result;
	int first, second;
	queue<int> q;

	// 사용자 입력 받음
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> first >> second;
		edges.push_back(make_pair(first, second));
		degree[second]++;
	}

	// 진입차수가 0인 항목들 큐에 추가
	for (int i = 1; i <= n; i++)
	{
		if (degree[i] == 0) {
			q.push(i);
		}
	}

	// 위상정렬 시작
	for (int i = 1; i <= n; i++)
	{
		if (q.empty() == true)	// 사이클 존재
			break;

		int node = q.front();
		q.pop();

		result.push_back(node);

		for (pair<int, int> edge : edges)
		{
			if (edge.first == node)
			{
				degree[edge.second]--;
				if (degree[edge.second] == 0)
					q.push(edge.second);
			}
		}
	}

	for (int r : result)
		cout << r << " ";

	return 0;
}