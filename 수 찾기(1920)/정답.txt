#include <iostream>
#include <algorithm>

#define NODE_COUNT 100000

using namespace std;

int nums[NODE_COUNT] = { 0, };

// 키값과 배열의 크기를 받아 이진탐색 시작
bool search(int n, int key)
{
	int start = 0;
	int end = n;
	int mid;
	while (start < end)
	{
		mid = (start + end) / 2;
		if (nums[mid] == key)	// 키값과 배열의 값이 같을경우 탐색 성공
			return true;
		else if (nums[mid] < key)	// 키 값이 더 클 경우 배열의 오른쪽 탐색(시작값을 증가)
			start = mid + 1;
		else if (nums[mid] > key)	// 키값이 더 작을경우 배열의 왼쪽 탐색(끝값 감소)
			end = mid;
	}

	return false;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n, m, num;

	// 사용자 입력 받음
	cin >> n;
	for (int i = 0 ; i < n; i++)
		cin >> nums[i];
	
	// 이진탐색을 위해 배열 정렬
	sort(nums, nums + n);	

	// 해당 수가 배열안에 있는지 질의
	cin >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> num;
		if (search(n, num) == true) 
			cout << "1" << "\n";
		else
			cout << "0" << "\n";
	}

	return 0;
}