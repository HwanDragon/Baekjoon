
#include<iostream>
#include<algorithm>
#include<cmath>
using namespace std;

/*
	n = 1인 경우 상근이가 이김(한번에 가져감)

	n = 2인 경우 상근이가 1개, 창영이가 1개 가져가서 창영이가 이김

	n = 3인 경우 상근이가 이김 (한번에 가져감)

	n = 4 일 경우 
	 - 상근 : 1 - 창영 : 3   winner : 창영
	 - 상근 : 3 - 창영 : 1   winner : 창영


	위의 경우를 생각해보면 상대방의 경우 다른사람이 무슨 수를 선택하든 4의 배수로 반복되게 할 수 있음

	즉, 4로 나누었을 때 나머지를 판별하여 승자를 가릴 수 있음

	///////////////////////////////////////////////////////
	1. n = 5일 경우 (n % 4 == 1) 일 경우에는 상근이가 1개 선택
	  - 그 후 창영이가 1개 선택하면 상근이가 3개 선택하여 승리
	  - 그 후 창영이가 3개 선택하면 상근이가 1개 선택하여 승리

	////////////////////////////////////////////////////////
	1. n = 6일 경우 (n % 4 == 2) 에는 창영이가 이김
	   - 상근이가 1개 선택하면 창영이도 1개 선택, 그 후 상근이가 1개 선택하면 창영이 3개 선택
	   - 상근이가 3개 선택하면 창영이도 1개 선택, 그 후 상근이가 1개 선택하면 창영이 3개 선택
	2. n = 10일 경우 시작을 상근이가 먼저 하므로
	   상근이가 1개를 선택하면 창영이가 3개를 선택하고,
	   탁자위에 남은 돌은 n = 6가 되고, 상근이 차례이므로 하므로 1번 케이스와 동일한 결과가 나옴
	3. n = 14일 경우 역시 동일함

	///////////////////////////////////////////////////////
	위처럼 (n % 4 == 3) 인 경우와 (n % 4 == 4) 인 경우를 계산 할 수있음
*/

int main()
{
	long long n;
	cin >> n;
	string winner;

	if (n == 3 || n == 1)
	{
		winner = "SK";
	}
	else if (n == 2)
	{
		winner = "CY";
	}
	else 
	{
		if (n % 4 == 0)
		{
			winner = "CY";
		}
		else if (n % 4 == 1)
		{
			winner = "SK";
		}
		else if (n % 4 == 2)
		{
			winner = "CY";
		}
		else
		{
			winner = "SK";
		}
	}

	cout << winner;

	return 0;
}