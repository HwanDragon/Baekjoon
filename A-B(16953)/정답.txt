#include <iostream>
#include <queue>

using namespace std;

int main()
{
	int n, m;
	cin >> n >> m;

	long long result = -1;	// 결과값 저장

	// BFS 탐색
	queue<pair<long long, long long>> q;
	q.push({n, 1});
	while (q.empty() == false)
	{
		pair<int, int> p = q.front();
		q.pop();
		long long cur = p.first;
		long long cost = p.second;

		if (cur > m) continue;	// m보다 클경우 더이상 탐색할 필요 없음
		if (cur == m)	// 결과값 얻음
		{
			result = cost;
			break;
		}
 
		// 10을 곱하고 1을 더하는 연산(1을 수의 가장 오른쪽에 추가하는 연산)
		if (cur * 10 + 1 <= m)
			q.push({cur * 10 + 1, cost + 1});

		// 2를 곱하는 연산
		if (cur * 2 <= m)
			q.push({cur * 2 , cost + 1});
	}
	cout << result;
	return 0;
}